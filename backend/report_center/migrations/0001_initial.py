# Generated by Django 5.2.5 on 2025-08-30 16:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0032_broadcastmessage_broadcastdelivery_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('generating', 'Generating'), ('ready', 'Ready'), ('shared', 'Shared'), ('error', 'Error')], default='draft', max_length=50)),
                ('report_config', models.JSONField(help_text='Report-specific customizations and settings')),
                ('data_snapshot', models.JSONField(help_text='Cached data at time of generation (client, scenario, calculations)')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='report_center/generated_reports/pdf/')),
                ('pptx_file', models.FileField(blank=True, null=True, upload_to='report_center/generated_reports/pptx/')),
                ('shared_with_client', models.BooleanField(default=False)),
                ('client_access_token', models.CharField(blank=True, help_text='Secure token for client portal access', max_length=100, null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Client access expiration time', null=True)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('shared_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='core.client')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'db_table': 'reports',
            },
        ),
        migrations.CreateModel(
            name='ReportShare',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipient_email', models.EmailField(max_length=254)),
                ('access_token', models.CharField(help_text='Unique token for accessing shared report', max_length=100, unique=True)),
                ('share_type', models.CharField(choices=[('client', 'Client Access'), ('colleague', 'Colleague Sharing'), ('public', 'Public Link')], max_length=50)),
                ('permissions', models.JSONField(default=dict, help_text='View, download, comment permissions')),
                ('accessed_at', models.DateTimeField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='report_center.report')),
            ],
            options={
                'verbose_name': 'Report Share',
                'verbose_name_plural': 'Report Shares',
                'db_table': 'report_shares',
            },
        ),
        migrations.CreateModel(
            name='ReportComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('section_reference', models.CharField(blank=True, help_text='Reference to specific report section if applicable', max_length=255, null=True)),
                ('commenter_email', models.EmailField(max_length=254)),
                ('commenter_name', models.CharField(blank=True, max_length=255)),
                ('is_resolved', models.BooleanField(default=False)),
                ('advisor_response', models.TextField(blank=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='report_center.report')),
                ('share', models.ForeignKey(help_text='The share link this comment was made through', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='report_center.reportshare')),
            ],
            options={
                'verbose_name': 'Report Comment',
                'verbose_name_plural': 'Report Comments',
                'db_table': 'report_comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('template_type', models.CharField(choices=[('system', 'System Template'), ('user', 'User Template'), ('firm', 'Firm Template')], max_length=50)),
                ('category', models.CharField(choices=[('retirement', 'Retirement Planning'), ('tax', 'Tax Strategy'), ('comparison', 'Scenario Comparison'), ('irmaa', 'IRMAA Analysis'), ('roth', 'Roth Conversion'), ('general', 'General Purpose')], max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system_template', models.BooleanField(default=False)),
                ('template_config', models.JSONField(help_text='Template structure, layout, and settings in JSON format')),
                ('preview_image', models.ImageField(blank=True, null=True, upload_to='report_center/template_previews/')),
                ('tags', models.JSONField(default=list, help_text='Searchable tags as JSON array')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
                ('firm', models.ForeignKey(blank=True, help_text='For firm-level templates, references the firm owner/admin', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='firm_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'db_table': 'report_templates',
            },
        ),
        migrations.CreateModel(
            name='ReportSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('section_type', models.CharField(choices=[('cover', 'Cover Page'), ('summary', 'Executive Summary'), ('charts', 'Charts & Visualizations'), ('data_table', 'Data Tables'), ('text', 'Text Content'), ('scenarios', 'Scenario Analysis'), ('recommendations', 'Recommendations'), ('irmaa', 'IRMAA Analysis'), ('roth', 'Roth Conversion'), ('tax_strategy', 'Tax Strategy')], max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('order_index', models.PositiveIntegerField(help_text='Order within the template')),
                ('is_required', models.BooleanField(default=False, help_text='Required sections cannot be removed from reports')),
                ('section_config', models.JSONField(help_text='Section-specific configuration (layout, styling, data binding)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='report_center.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report Section',
                'verbose_name_plural': 'Report Sections',
                'db_table': 'report_sections',
                'ordering': ['order_index'],
            },
        ),
        migrations.AddField(
            model_name='report',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='report_center.reporttemplate'),
        ),
        migrations.CreateModel(
            name='TemplateAnalytics',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('viewed', 'Viewed'), ('used', 'Used in Report'), ('customized', 'Customized'), ('shared', 'Shared'), ('downloaded', 'Downloaded')], max_length=50)),
                ('metadata', models.JSONField(default=dict, help_text='Additional action-specific data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_analytics', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='report_center.reporttemplate')),
            ],
            options={
                'verbose_name': 'Template Analytics',
                'verbose_name_plural': 'Template Analytics',
                'db_table': 'template_analytics',
            },
        ),
        migrations.CreateModel(
            name='ReportGeneration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='queued', max_length=50)),
                ('generation_type', models.CharField(choices=[('pdf', 'PDF'), ('pptx', 'PowerPoint'), ('both', 'Both')], default='both', max_length=50)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time_seconds', models.FloatField(blank=True, null=True)),
                ('file_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_details', models.JSONField(default=dict, help_text='Detailed error information for debugging')),
                ('generation_config', models.JSONField(default=dict, help_text='Configuration used for this generation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generations', to='report_center.report')),
            ],
            options={
                'verbose_name': 'Report Generation',
                'verbose_name_plural': 'Report Generations',
                'db_table': 'report_generations',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report'], name='report_gene_report__d9a8c2_idx'), models.Index(fields=['status'], name='report_gene_status_cd0b61_idx'), models.Index(fields=['generation_type'], name='report_gene_generat_dc0d60_idx'), models.Index(fields=['created_at'], name='report_gene_created_d18a2a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='reportshare',
            index=models.Index(fields=['report'], name='report_shar_report__ac7f8f_idx'),
        ),
        migrations.AddIndex(
            model_name='reportshare',
            index=models.Index(fields=['access_token'], name='report_shar_access__e0c88f_idx'),
        ),
        migrations.AddIndex(
            model_name='reportshare',
            index=models.Index(fields=['recipient_email'], name='report_shar_recipie_47e02e_idx'),
        ),
        migrations.AddIndex(
            model_name='reportshare',
            index=models.Index(fields=['share_type'], name='report_shar_share_t_307628_idx'),
        ),
        migrations.AddIndex(
            model_name='reportshare',
            index=models.Index(fields=['created_at'], name='report_shar_created_a51e6e_idx'),
        ),
        migrations.AddIndex(
            model_name='reportshare',
            index=models.Index(fields=['expires_at'], name='report_shar_expires_a38db6_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcomment',
            index=models.Index(fields=['report'], name='report_comm_report__b43aab_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcomment',
            index=models.Index(fields=['share'], name='report_comm_share_i_3c1829_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcomment',
            index=models.Index(fields=['commenter_email'], name='report_comm_comment_4c8450_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcomment',
            index=models.Index(fields=['is_resolved'], name='report_comm_is_reso_4a120c_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcomment',
            index=models.Index(fields=['created_at'], name='report_comm_created_bcb11d_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['template_type'], name='report_temp_templat_fe87ac_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['category'], name='report_temp_categor_f65aa8_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['is_active'], name='report_temp_is_acti_2cb562_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['created_by'], name='report_temp_created_5c0da4_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['firm'], name='report_temp_firm_id_c298c7_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['created_at'], name='report_temp_created_9dd79c_idx'),
        ),
        migrations.AddIndex(
            model_name='reportsection',
            index=models.Index(fields=['template'], name='report_sect_templat_87f129_idx'),
        ),
        migrations.AddIndex(
            model_name='reportsection',
            index=models.Index(fields=['section_type'], name='report_sect_section_5b1146_idx'),
        ),
        migrations.AddIndex(
            model_name='reportsection',
            index=models.Index(fields=['order_index'], name='report_sect_order_i_a800d1_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['advisor'], name='reports_advisor_6ebf4c_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['client'], name='reports_client__0df143_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['template'], name='reports_templat_70ba78_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['status'], name='reports_status_e83c1d_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['shared_with_client'], name='reports_shared__1d0c86_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['created_at'], name='reports_created_c5f642_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['generated_at'], name='reports_generat_a38578_idx'),
        ),
        migrations.AddIndex(
            model_name='templateanalytics',
            index=models.Index(fields=['template'], name='template_an_templat_33e347_idx'),
        ),
        migrations.AddIndex(
            model_name='templateanalytics',
            index=models.Index(fields=['advisor'], name='template_an_advisor_7ff77c_idx'),
        ),
        migrations.AddIndex(
            model_name='templateanalytics',
            index=models.Index(fields=['action'], name='template_an_action_52426b_idx'),
        ),
        migrations.AddIndex(
            model_name='templateanalytics',
            index=models.Index(fields=['created_at'], name='template_an_created_0950a3_idx'),
        ),
    ]
