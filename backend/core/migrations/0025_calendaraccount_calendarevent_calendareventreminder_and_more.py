# Generated by Django 5.2.5 on 2025-08-27 00:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0024_task_taskcomment_tasktemplate_task_template_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('google', 'Google Calendar'), ('outlook', 'Microsoft Outlook Calendar')], max_length=20)),
                ('external_account_id', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=255)),
                ('email_address', models.EmailField(max_length=254)),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField(blank=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('primary_calendar', models.BooleanField(default=False)),
                ('sync_past_days', models.PositiveIntegerField(default=30, help_text='Number of past days to sync events')),
                ('sync_future_days', models.PositiveIntegerField(default=90, help_text='Number of future days to sync events')),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_token', models.TextField(blank=True)),
                ('timezone', models.CharField(default='America/New_York', max_length=50)),
                ('calendar_list', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_event_id', models.CharField(max_length=255)),
                ('calendar_id', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=500)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('all_day', models.BooleanField(default=False)),
                ('timezone', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('tentative', 'Tentative'), ('cancelled', 'Cancelled')], default='confirmed', max_length=20)),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('confidential', 'Confidential')], default='public', max_length=20)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurring_event_id', models.CharField(blank=True, max_length=255)),
                ('organizer_email', models.EmailField(blank=True, max_length=254)),
                ('organizer_name', models.CharField(blank=True, max_length=255)),
                ('attendees', models.JSONField(blank=True, default=list)),
                ('meeting_url', models.URLField(blank=True)),
                ('meeting_type', models.CharField(blank=True, max_length=50)),
                ('meeting_id', models.CharField(blank=True, max_length=255)),
                ('last_modified_external', models.DateTimeField(blank=True, null=True)),
                ('etag', models.CharField(blank=True, max_length=255)),
                ('is_synced', models.BooleanField(default=True)),
                ('sync_errors', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calendar_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.calendaraccount')),
                ('client', models.ForeignKey(blank=True, help_text='Client this meeting is associated with', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.client')),
                ('lead', models.ForeignKey(blank=True, help_text='Lead this meeting is associated with', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.lead')),
                ('task', models.ForeignKey(blank=True, help_text='Task this meeting is associated with', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.task')),
            ],
            options={
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='CalendarEventReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('popup', 'Popup'), ('sms', 'SMS')], max_length=20)),
                ('minutes_before', models.PositiveIntegerField(help_text='Minutes before event to send reminder')),
                ('remind_at', models.DateTimeField()),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='core.calendarevent')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('default_duration', models.PositiveIntegerField(default=60, help_text='Default duration in minutes')),
                ('default_title', models.CharField(blank=True, max_length=255)),
                ('default_description', models.TextField(blank=True)),
                ('default_location', models.CharField(blank=True, max_length=255)),
                ('include_video_link', models.BooleanField(default=True)),
                ('preferred_meeting_type', models.CharField(choices=[('zoom', 'Zoom'), ('meet', 'Google Meet'), ('teams', 'Microsoft Teams')], default='zoom', max_length=20)),
                ('send_calendar_invite', models.BooleanField(default=True)),
                ('create_follow_up_task', models.BooleanField(default=True)),
                ('follow_up_task_days', models.PositiveIntegerField(default=1)),
                ('follow_up_task_title', models.CharField(default='Follow up on meeting', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='calendaraccount',
            index=models.Index(fields=['user', 'is_active'], name='core_calend_user_id_88ee41_idx'),
        ),
        migrations.AddIndex(
            model_name='calendaraccount',
            index=models.Index(fields=['provider', 'sync_enabled'], name='core_calend_provide_a93930_idx'),
        ),
        migrations.AddIndex(
            model_name='calendaraccount',
            index=models.Index(fields=['last_sync_at'], name='core_calend_last_sy_e2cddb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='calendaraccount',
            unique_together={('user', 'provider', 'external_account_id')},
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['calendar_account', 'start_datetime'], name='core_calend_calenda_e0b40d_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['start_datetime', 'end_datetime'], name='core_calend_start_d_c358c8_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['client', 'start_datetime'], name='core_calend_client__b00e33_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['lead', 'start_datetime'], name='core_calend_lead_id_ef8b25_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['status', 'start_datetime'], name='core_calend_status_348a67_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['is_synced', 'last_modified_external'], name='core_calend_is_sync_470cbe_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='calendarevent',
            unique_together={('calendar_account', 'external_event_id')},
        ),
        migrations.AddIndex(
            model_name='calendareventreminder',
            index=models.Index(fields=['remind_at', 'is_sent'], name='core_calend_remind__c72a93_idx'),
        ),
        migrations.AddIndex(
            model_name='calendareventreminder',
            index=models.Index(fields=['event', 'reminder_type'], name='core_calend_event_i_428008_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingtemplate',
            index=models.Index(fields=['user', 'is_active'], name='core_meetin_user_id_a56bc3_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingtemplate',
            index=models.Index(fields=['-usage_count'], name='core_meetin_usage_c_c8bc09_idx'),
        ),
    ]
