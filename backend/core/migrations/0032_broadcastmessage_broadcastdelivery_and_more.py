# Generated by Django 5.2.5 on 2025-08-29 22:49

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0031_analytics_phase2'),
    ]

    operations = [
        migrations.CreateModel(
            name='BroadcastMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('message_type', models.CharField(choices=[('announcement', 'Announcement'), ('maintenance', 'Maintenance Alert'), ('feature_update', 'Feature Update'), ('promotion', 'Promotion'), ('urgent', 'Urgent Notice'), ('newsletter', 'Newsletter')], max_length=20)),
                ('delivery_method', models.CharField(choices=[('in_app', 'In-App Notification'), ('email', 'Email'), ('both', 'In-App + Email')], default='both', max_length=20)),
                ('target_all_users', models.BooleanField(default=False)),
                ('target_roles', models.JSONField(default=list)),
                ('target_user_segments', models.JSONField(default=dict)),
                ('send_immediately', models.BooleanField(default=True)),
                ('scheduled_send_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.IntegerField(default=0)),
                ('delivered_count', models.IntegerField(default=0)),
                ('opened_count', models.IntegerField(default=0)),
                ('clicked_count', models.IntegerField(default=0)),
                ('has_action_button', models.BooleanField(default=False)),
                ('action_button_text', models.CharField(blank=True, max_length=50)),
                ('action_button_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_broadcasts', to=settings.AUTH_USER_MODEL)),
                ('specific_users', models.ManyToManyField(blank=True, related_name='targeted_broadcasts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BroadcastDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(choices=[('in_app', 'In-App Notification'), ('email', 'Email'), ('both', 'In-App + Email')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broadcast_deliveries', to=settings.AUTH_USER_MODEL)),
                ('broadcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='core.broadcastmessage')),
            ],
        ),
        migrations.CreateModel(
            name='ConfigurationAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(choices=[('feature_flag', 'Feature Flag'), ('system_config', 'System Configuration'), ('integration', 'Integration Setting'), ('email_template', 'Email Template')], max_length=20)),
                ('object_id', models.IntegerField()),
                ('object_name', models.CharField(max_length=200)),
                ('action', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('approve', 'Approved'), ('reject', 'Rejected'), ('activate', 'Activated'), ('deactivate', 'Deactivated')], max_length=20)),
                ('old_values', models.JSONField(default=dict)),
                ('new_values', models.JSONField(default=dict)),
                ('change_reason', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approval_status', models.CharField(blank=True, max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='configuration_approvals', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('user_analytics', 'User Analytics'), ('revenue_analytics', 'Revenue Analytics'), ('engagement_analytics', 'Engagement Analytics'), ('performance_analytics', 'Performance Analytics'), ('churn_analytics', 'Churn Analytics'), ('custom', 'Custom Query')], max_length=30)),
                ('data_sources', models.JSONField(default=list)),
                ('filters', models.JSONField(default=dict)),
                ('grouping', models.JSONField(default=list)),
                ('aggregations', models.JSONField(default=list)),
                ('sorting', models.JSONField(default=list)),
                ('chart_type', models.CharField(blank=True, max_length=50)),
                ('chart_config', models.JSONField(default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_count', models.IntegerField(default=0)),
                ('last_viewed', models.DateTimeField(blank=True, null=True)),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='accessible_reports', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('campaign_type', models.CharField(choices=[('marketing', 'Marketing'), ('educational', 'Educational'), ('onboarding', 'Onboarding'), ('retention', 'Retention'), ('win_back', 'Win-back'), ('newsletter', 'Newsletter')], max_length=20)),
                ('subject_line', models.CharField(max_length=200)),
                ('preview_text', models.CharField(blank=True, max_length=150)),
                ('email_content', models.TextField()),
                ('plain_text_content', models.TextField(blank=True)),
                ('is_ab_test', models.BooleanField(default=False)),
                ('ab_test_config', models.JSONField(default=dict)),
                ('target_segments', models.JSONField(default=dict)),
                ('estimated_recipients', models.IntegerField(default=0)),
                ('send_immediately', models.BooleanField(default=False)),
                ('scheduled_send_time', models.DateTimeField(blank=True, null=True)),
                ('sender_name', models.CharField(blank=True, max_length=100)),
                ('sender_email', models.EmailField(blank=True, max_length=254)),
                ('reply_to_email', models.EmailField(blank=True, max_length=254)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_sent', models.IntegerField(default=0)),
                ('delivered_count', models.IntegerField(default=0)),
                ('opened_count', models.IntegerField(default=0)),
                ('clicked_count', models.IntegerField(default=0)),
                ('unsubscribed_count', models.IntegerField(default=0)),
                ('bounced_count', models.IntegerField(default=0)),
                ('open_rate', models.FloatField(blank=True, null=True)),
                ('click_rate', models.FloatField(blank=True, null=True)),
                ('click_through_rate', models.FloatField(blank=True, null=True)),
                ('unsubscribe_rate', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailCampaignDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(max_length=254)),
                ('subject_line', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('unsubscribed', 'Unsubscribed'), ('complained', 'Spam Complaint'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('first_opened_at', models.DateTimeField(blank=True, null=True)),
                ('last_opened_at', models.DateTimeField(blank=True, null=True)),
                ('open_count', models.IntegerField(default=0)),
                ('click_count', models.IntegerField(default=0)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('email_client', models.CharField(blank=True, max_length=100)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('bounce_reason', models.CharField(blank=True, max_length=200)),
                ('error_message', models.TextField(blank=True)),
                ('ab_variant', models.CharField(blank=True, max_length=10)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='core.emailcampaign')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_deliveries', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=100, unique=True)),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('password_reset', 'Password Reset'), ('subscription_created', 'Subscription Created'), ('subscription_cancelled', 'Subscription Cancelled'), ('trial_expiring', 'Trial Expiring'), ('payment_failed', 'Payment Failed'), ('system_maintenance', 'System Maintenance'), ('newsletter', 'Newsletter'), ('custom', 'Custom')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('subject', models.CharField(max_length=200)),
                ('html_body', models.TextField()),
                ('text_body', models.TextField(blank=True)),
                ('variables', models.JSONField(default=list)),
                ('default_sender_name', models.CharField(blank=True, max_length=100)),
                ('default_sender_email', models.EmailField(blank=True, max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_email_templates', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExecutiveDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboard_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('layout_config', models.JSONField(default=dict)),
                ('refresh_interval', models.IntegerField(default=300)),
                ('widgets', models.JSONField(default=list)),
                ('visible_to_roles', models.JSONField(default=list)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_count', models.IntegerField(default=0)),
                ('last_viewed', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_enabled', models.BooleanField(default=False)),
                ('rollout_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('user_segments', models.JSONField(default=list)),
                ('enabled_in_dev', models.BooleanField(default=True)),
                ('enabled_in_staging', models.BooleanField(default=False)),
                ('enabled_in_prod', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_feature_flags', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InAppNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('system', 'System Notification'), ('feature', 'Feature Announcement'), ('reminder', 'Reminder'), ('warning', 'Warning'), ('success', 'Success Message'), ('info', 'Information')], default='system', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('has_action', models.BooleanField(default=False)),
                ('action_text', models.CharField(blank=True, max_length=50)),
                ('action_url', models.URLField(blank=True)),
                ('action_data', models.JSONField(default=dict)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(blank=True, max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('dismissed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('auto_dismiss_after', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notifications', to=settings.AUTH_USER_MODEL)),
                ('source_broadcast', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.broadcastmessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_name', models.CharField(choices=[('auth0', 'Auth0'), ('stripe', 'Stripe'), ('aws', 'AWS'), ('twilio', 'Twilio'), ('sendgrid', 'SendGrid'), ('google', 'Google'), ('microsoft', 'Microsoft')], max_length=50)),
                ('environment', models.CharField(choices=[('development', 'Development'), ('staging', 'Staging'), ('production', 'Production')], max_length=20)),
                ('config_data', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('last_tested', models.DateTimeField(blank=True, null=True)),
                ('test_status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('test_error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_integrations', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('maintenance_type', models.CharField(choices=[('scheduled', 'Scheduled Maintenance'), ('emergency', 'Emergency Maintenance'), ('upgrade', 'System Upgrade')], max_length=20)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('block_all_access', models.BooleanField(default=True)),
                ('allow_admin_access', models.BooleanField(default=True)),
                ('public_message', models.TextField(help_text='Message shown to users during maintenance')),
                ('notification_sent', models.BooleanField(default=False)),
                ('advance_notice_hours', models.IntegerField(default=24)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('progress_message', models.CharField(blank=True, max_length=200)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('status_page_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scheduled_start'],
            },
        ),
        migrations.CreateModel(
            name='PredictiveAnalyticsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=200)),
                ('model_type', models.CharField(choices=[('churn_prediction', 'Churn Prediction'), ('clv_calculation', 'Customer Lifetime Value'), ('usage_forecasting', 'Usage Forecasting'), ('revenue_forecasting', 'Revenue Forecasting')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('features', models.JSONField(default=list)),
                ('target_variable', models.CharField(max_length=100)),
                ('algorithm', models.CharField(max_length=50)),
                ('hyperparameters', models.JSONField(default=dict)),
                ('accuracy_score', models.FloatField(blank=True, null=True)),
                ('precision_score', models.FloatField(blank=True, null=True)),
                ('recall_score', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('model_file_path', models.CharField(blank=True, max_length=500)),
                ('feature_importance', models.JSONField(default=dict)),
                ('training_data_size', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('training', 'Training'), ('ready', 'Ready'), ('deprecated', 'Deprecated'), ('failed', 'Failed')], default='training', max_length=20)),
                ('trained_at', models.DateTimeField(blank=True, null=True)),
                ('last_prediction_at', models.DateTimeField(blank=True, null=True)),
                ('prediction_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerLifetimeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_clv', models.DecimalField(decimal_places=2, max_digits=12)),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('future_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('clv_6_months', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('clv_1_year', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('clv_3_years', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('value_segment', models.CharField(choices=[('high_value', 'High Value'), ('medium_value', 'Medium Value'), ('low_value', 'Low Value'), ('potential', 'High Potential')], max_length=20)),
                ('predicted_lifetime_months', models.IntegerField()),
                ('average_monthly_revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('retention_probability', models.FloatField()),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('calculation_method', models.CharField(max_length=50)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clv_calculations', to=settings.AUTH_USER_MODEL)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.predictiveanalyticsmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_name', models.CharField(max_length=200)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=20)),
                ('day_of_week', models.IntegerField(blank=True, null=True)),
                ('day_of_month', models.IntegerField(blank=True, null=True)),
                ('time_of_day', models.TimeField()),
                ('email_recipients', models.JSONField(default=list)),
                ('export_format', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('pdf', 'PDF'), ('json', 'JSON')], default='pdf', max_length=10)),
                ('include_charts', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('disabled', 'Disabled')], default='active', max_length=20)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField()),
                ('run_count', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='core.customreport')),
            ],
        ),
        migrations.CreateModel(
            name='ReportExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='running', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_time', models.IntegerField(blank=True, null=True)),
                ('result_count', models.IntegerField(blank=True, null=True)),
                ('export_file_path', models.CharField(blank=True, max_length=500)),
                ('export_file_size', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('stack_trace', models.TextField(blank=True)),
                ('execution_params', models.JSONField(default=dict)),
                ('executed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='core.customreport')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.reportschedule')),
            ],
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_key', models.CharField(max_length=100, unique=True)),
                ('config_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('system', 'System'), ('security', 'Security'), ('integration', 'Integration'), ('ui', 'User Interface'), ('performance', 'Performance'), ('billing', 'Billing')], max_length=50)),
                ('config_value', models.TextField()),
                ('config_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('json', 'JSON'), ('float', 'Float')], default='string', max_length=20)),
                ('environment', models.CharField(choices=[('development', 'Development'), ('staging', 'Staging'), ('production', 'Production')], default='production', max_length=20)),
                ('is_sensitive', models.BooleanField(default=False)),
                ('validation_rule', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_configurations', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserChurnPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('churn_probability', models.FloatField()),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], max_length=20)),
                ('feature_values', models.JSONField(default=dict)),
                ('contributing_factors', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('predicted_at', models.DateTimeField(auto_now_add=True)),
                ('prediction_horizon_days', models.IntegerField(default=30)),
                ('actual_churned', models.BooleanField(blank=True, null=True)),
                ('churn_date', models.DateTimeField(blank=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.predictiveanalyticsmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='churn_predictions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('feedback_type', models.CharField(choices=[('bug_report', 'Bug Report'), ('feature_request', 'Feature Request'), ('general_feedback', 'General Feedback'), ('complaint', 'Complaint'), ('compliment', 'Compliment'), ('suggestion', 'Suggestion')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_review', 'In Review'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('duplicate', 'Duplicate')], default='open', max_length=20)),
                ('page_url', models.URLField(blank=True)),
                ('user_agent', models.TextField(blank=True)),
                ('browser_info', models.JSONField(default=dict)),
                ('screen_resolution', models.CharField(blank=True, max_length=20)),
                ('has_attachments', models.BooleanField(default=False)),
                ('attachment_paths', models.JSONField(default=list)),
                ('tags', models.JSONField(default=list)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('staff_notes', models.TextField(blank=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('customer_satisfied', models.BooleanField(blank=True, null=True)),
                ('satisfaction_rating', models.IntegerField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_feedback', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_internal_note', models.BooleanField(default=False)),
                ('visible_to_user', models.BooleanField(default=True)),
                ('user_notified', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('has_attachments', models.BooleanField(default=False)),
                ('attachment_paths', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_responses', to=settings.AUTH_USER_MODEL)),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='core.userfeedback')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='broadcastmessage',
            index=models.Index(fields=['status', '-created_at'], name='core_broadc_status_14333d_idx'),
        ),
        migrations.AddIndex(
            model_name='broadcastmessage',
            index=models.Index(fields=['message_type', '-sent_at'], name='core_broadc_message_e2f126_idx'),
        ),
        migrations.AddIndex(
            model_name='broadcastmessage',
            index=models.Index(fields=['scheduled_send_time'], name='core_broadc_schedul_f6b622_idx'),
        ),
        migrations.AddIndex(
            model_name='broadcastdelivery',
            index=models.Index(fields=['broadcast', 'status'], name='core_broadc_broadca_3e94d0_idx'),
        ),
        migrations.AddIndex(
            model_name='broadcastdelivery',
            index=models.Index(fields=['user', '-sent_at'], name='core_broadc_user_id_06f1f4_idx'),
        ),
        migrations.AddIndex(
            model_name='broadcastdelivery',
            index=models.Index(fields=['status', '-sent_at'], name='core_broadc_status_14018c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='broadcastdelivery',
            unique_together={('broadcast', 'user')},
        ),
        migrations.AddIndex(
            model_name='configurationauditlog',
            index=models.Index(fields=['object_type', 'object_id'], name='core_config_object__2a485f_idx'),
        ),
        migrations.AddIndex(
            model_name='configurationauditlog',
            index=models.Index(fields=['user', '-created_at'], name='core_config_user_id_25c45c_idx'),
        ),
        migrations.AddIndex(
            model_name='configurationauditlog',
            index=models.Index(fields=['action', '-created_at'], name='core_config_action_d8f4c9_idx'),
        ),
        migrations.AddIndex(
            model_name='configurationauditlog',
            index=models.Index(fields=['approval_status', '-created_at'], name='core_config_approva_30a4aa_idx'),
        ),
        migrations.AddIndex(
            model_name='customreport',
            index=models.Index(fields=['report_type', 'created_by'], name='core_custom_report__b6cea8_idx'),
        ),
        migrations.AddIndex(
            model_name='customreport',
            index=models.Index(fields=['is_public', '-created_at'], name='core_custom_is_publ_76a022_idx'),
        ),
        migrations.AddIndex(
            model_name='emailcampaign',
            index=models.Index(fields=['status', '-created_at'], name='core_emailc_status_019601_idx'),
        ),
        migrations.AddIndex(
            model_name='emailcampaign',
            index=models.Index(fields=['campaign_type', '-sent_at'], name='core_emailc_campaig_0d2fde_idx'),
        ),
        migrations.AddIndex(
            model_name='emailcampaign',
            index=models.Index(fields=['created_by', '-created_at'], name='core_emailc_created_af2331_idx'),
        ),
        migrations.AddIndex(
            model_name='emailcampaigndelivery',
            index=models.Index(fields=['campaign', 'status'], name='core_emailc_campaig_c12348_idx'),
        ),
        migrations.AddIndex(
            model_name='emailcampaigndelivery',
            index=models.Index(fields=['user', '-sent_at'], name='core_emailc_user_id_871888_idx'),
        ),
        migrations.AddIndex(
            model_name='emailcampaigndelivery',
            index=models.Index(fields=['status', '-sent_at'], name='core_emailc_status_0a41db_idx'),
        ),
        migrations.AddIndex(
            model_name='emailcampaigndelivery',
            index=models.Index(fields=['ab_variant', 'campaign'], name='core_emailc_ab_vari_703be0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='emailcampaigndelivery',
            unique_together={('campaign', 'user')},
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['template_type', 'is_active'], name='core_emailt_templat_5234f6_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['approval_status', 'updated_at'], name='core_emailt_approva_887c07_idx'),
        ),
        migrations.AddIndex(
            model_name='executivedashboard',
            index=models.Index(fields=['is_default', '-created_at'], name='core_execut_is_defa_b68a54_idx'),
        ),
        migrations.AddIndex(
            model_name='executivedashboard',
            index=models.Index(fields=['created_by', '-created_at'], name='core_execut_created_dd4730_idx'),
        ),
        migrations.AddIndex(
            model_name='featureflag',
            index=models.Index(fields=['name', 'is_enabled'], name='core_featur_name_d13fef_idx'),
        ),
        migrations.AddIndex(
            model_name='featureflag',
            index=models.Index(fields=['approval_status', 'created_at'], name='core_featur_approva_a1f8dc_idx'),
        ),
        migrations.AddIndex(
            model_name='inappnotification',
            index=models.Index(fields=['user', 'is_read', '-created_at'], name='core_inappn_user_id_deeb2a_idx'),
        ),
        migrations.AddIndex(
            model_name='inappnotification',
            index=models.Index(fields=['user', 'priority', '-created_at'], name='core_inappn_user_id_1484df_idx'),
        ),
        migrations.AddIndex(
            model_name='inappnotification',
            index=models.Index(fields=['notification_type', '-created_at'], name='core_inappn_notific_80c230_idx'),
        ),
        migrations.AddIndex(
            model_name='inappnotification',
            index=models.Index(fields=['expires_at'], name='core_inappn_expires_0ed9d5_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationsettings',
            index=models.Index(fields=['integration_name', 'is_active'], name='core_integr_integra_ba9aae_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationsettings',
            index=models.Index(fields=['approval_status', 'updated_at'], name='core_integr_approva_c8c624_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='integrationsettings',
            unique_together={('integration_name', 'environment')},
        ),
        migrations.AddIndex(
            model_name='maintenancemode',
            index=models.Index(fields=['status', '-scheduled_start'], name='core_mainte_status_a55b4c_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancemode',
            index=models.Index(fields=['is_active', 'scheduled_start'], name='core_mainte_is_acti_5d3981_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancemode',
            index=models.Index(fields=['-scheduled_start'], name='core_mainte_schedul_cf23a1_idx'),
        ),
        migrations.AddIndex(
            model_name='predictiveanalyticsmodel',
            index=models.Index(fields=['model_type', 'status'], name='core_predic_model_t_d2a4a4_idx'),
        ),
        migrations.AddIndex(
            model_name='predictiveanalyticsmodel',
            index=models.Index(fields=['created_by', '-created_at'], name='core_predic_created_e36634_idx'),
        ),
        migrations.AddIndex(
            model_name='customerlifetimevalue',
            index=models.Index(fields=['user', '-calculated_at'], name='core_custom_user_id_e9ad51_idx'),
        ),
        migrations.AddIndex(
            model_name='customerlifetimevalue',
            index=models.Index(fields=['value_segment', '-predicted_clv'], name='core_custom_value_s_0072e5_idx'),
        ),
        migrations.AddIndex(
            model_name='customerlifetimevalue',
            index=models.Index(fields=['-predicted_clv'], name='core_custom_predict_b148e9_idx'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['status', 'next_run'], name='core_report_status_f64050_idx'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['created_by', '-created_at'], name='core_report_created_f29410_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['report', '-started_at'], name='core_report_report__bf16f1_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['status', '-started_at'], name='core_report_status_e5eb69_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfiguration',
            index=models.Index(fields=['category', 'environment'], name='core_system_categor_011ddb_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfiguration',
            index=models.Index(fields=['approval_status', 'updated_at'], name='core_system_approva_f67e9e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='systemconfiguration',
            unique_together={('config_key', 'environment')},
        ),
        migrations.AddIndex(
            model_name='userchurnprediction',
            index=models.Index(fields=['user', '-predicted_at'], name='core_userch_user_id_3541f4_idx'),
        ),
        migrations.AddIndex(
            model_name='userchurnprediction',
            index=models.Index(fields=['risk_level', '-predicted_at'], name='core_userch_risk_le_9cec45_idx'),
        ),
        migrations.AddIndex(
            model_name='userchurnprediction',
            index=models.Index(fields=['churn_probability', '-predicted_at'], name='core_userch_churn_p_6701d3_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['status', '-created_at'], name='core_userfe_status_0196ae_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['feedback_type', 'priority'], name='core_userfe_feedbac_4c67e2_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['user', '-created_at'], name='core_userfe_user_id_b8eb3c_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeedback',
            index=models.Index(fields=['assigned_to', 'status'], name='core_userfe_assigne_82e9a3_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackresponse',
            index=models.Index(fields=['feedback', '-created_at'], name='core_feedba_feedbac_f1f91e_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackresponse',
            index=models.Index(fields=['staff_user', '-created_at'], name='core_feedba_staff_u_43025c_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackresponse',
            index=models.Index(fields=['is_internal_note', '-created_at'], name='core_feedba_is_inte_da3028_idx'),
        ),
    ]
