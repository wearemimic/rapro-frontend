# Generated by Django 5.2.5 on 2025-08-27 14:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0025_calendaraccount_calendarevent_calendareventreminder_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category_type', models.CharField(choices=[('client_docs', 'Client Documents'), ('financial_plans', 'Financial Plans'), ('investment_statements', 'Investment Statements'), ('insurance_policies', 'Insurance Policies'), ('tax_documents', 'Tax Documents'), ('estate_planning', 'Estate Planning'), ('compliance', 'Compliance Documents'), ('marketing', 'Marketing Materials'), ('contracts', 'Client Contracts'), ('forms', 'Forms & Applications')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('default_retention_years', models.IntegerField(default=7)),
                ('requires_encryption', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.documentcategory')),
            ],
            options={
                'verbose_name_plural': 'Document Categories',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('original_filename', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_size', models.BigIntegerField()),
                ('file_type', models.CharField(max_length=100)),
                ('mime_type', models.CharField(max_length=100)),
                ('file_hash', models.CharField(max_length=64, unique=True)),
                ('s3_bucket', models.CharField(max_length=100)),
                ('s3_key', models.CharField(max_length=500)),
                ('s3_version_id', models.CharField(blank=True, max_length=100)),
                ('storage_class', models.CharField(default='STANDARD', max_length=50)),
                ('is_encrypted', models.BooleanField(default=True)),
                ('encryption_key_id', models.CharField(blank=True, max_length=100)),
                ('virus_scan_status', models.CharField(default='pending', max_length=20)),
                ('virus_scan_date', models.DateTimeField(blank=True, null=True)),
                ('compliance_type', models.CharField(choices=[('finra_3110', 'FINRA Rule 3110 - Books & Records'), ('finra_4511', 'FINRA Rule 4511 - Customer Account Info'), ('sec_17a4', 'SEC Rule 17a-4 - Record Retention'), ('ria_204', 'RIA Rule 204-2 - Investment Adviser Records'), ('privacy_reg_sp', 'Regulation S-P - Privacy'), ('none', 'No Specific Requirement')], default='none', max_length=30)),
                ('contains_pii', models.BooleanField(default=False)),
                ('contains_phi', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('active', 'Active'), ('archived', 'Archived'), ('quarantined', 'Quarantined'), ('deleted', 'Soft Deleted')], default='processing', max_length=20)),
                ('is_client_visible', models.BooleanField(default=False)),
                ('requires_signature', models.BooleanField(default=False)),
                ('is_template', models.BooleanField(default=False)),
                ('retention_status', models.CharField(choices=[('active', 'Active Retention'), ('extended', 'Extended Retention'), ('pending_disposal', 'Pending Disposal'), ('disposed', 'Disposed')], default='active', max_length=20)),
                ('retention_end_date', models.DateField(blank=True, null=True)),
                ('disposal_scheduled_date', models.DateField(blank=True, null=True)),
                ('disposal_method', models.CharField(blank=True, max_length=50)),
                ('text_content', models.TextField(blank=True)),
                ('thumbnail_s3_key', models.CharField(blank=True, max_length=500)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('extracted_metadata', models.JSONField(default=dict)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.IntegerField(default=0)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('search_vector', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
                ('parent_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.document')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.documentcategory')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.EmailField(blank=True, max_length=254)),
                ('permission_type', models.CharField(choices=[('view', 'View Only'), ('download', 'Download'), ('edit_metadata', 'Edit Metadata'), ('share', 'Share with Others'), ('delete', 'Delete'), ('full_control', 'Full Control')], max_length=20)),
                ('permission_scope', models.CharField(choices=[('document', 'Single Document'), ('category', 'Document Category'), ('client_all', 'All Client Documents')], max_length=20)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('share_token', models.CharField(blank=True, max_length=100, unique=True)),
                ('download_limit', models.IntegerField(blank=True, null=True)),
                ('downloads_used', models.IntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.documentcategory')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.document')),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentRetentionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('retention_years', models.IntegerField()),
                ('trigger_type', models.CharField(choices=[('document_upload', 'When Document Uploaded'), ('client_termination', 'When Client Relationship Ends'), ('fixed_date', 'Fixed Date'), ('custom_event', 'Custom Business Event')], max_length=30)),
                ('trigger_config', models.JSONField(default=dict)),
                ('disposal_method', models.CharField(choices=[('secure_delete', 'Secure Deletion'), ('archive_only', 'Archive (No Access)'), ('transfer_custody', 'Transfer to Client')], max_length=30)),
                ('auto_disposal_enabled', models.BooleanField(default=False)),
                ('notification_before_days', models.IntegerField(default=30)),
                ('regulatory_basis', models.TextField()),
                ('requires_approval', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.documentcategory')),
            ],
            options={
                'verbose_name_plural': 'Document Retention Policies',
            },
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('client_onboarding', 'Client Onboarding'), ('risk_assessment', 'Risk Assessment'), ('financial_plan', 'Financial Plan Template'), ('investment_policy', 'Investment Policy Statement'), ('service_agreement', 'Service Agreement'), ('disclosure', 'Disclosure Document'), ('form_adv', 'Form ADV'), ('privacy_notice', 'Privacy Notice')], max_length=30)),
                ('description', models.TextField()),
                ('variable_fields', models.JSONField(default=dict)),
                ('instructions', models.TextField(blank=True)),
                ('times_used', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('base_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.document')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.IntegerField()),
                ('s3_key', models.CharField(max_length=500)),
                ('s3_version_id', models.CharField(max_length=100)),
                ('file_size', models.BigIntegerField()),
                ('file_hash', models.CharField(max_length=64)),
                ('change_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_regulatory_version', models.BooleanField(default=False)),
                ('compliance_notes', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='core.document')),
            ],
            options={
                'ordering': ['-version_number'],
            },
        ),
        migrations.CreateModel(
            name='DocumentAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('uploaded', 'Document Uploaded'), ('viewed', 'Document Viewed'), ('downloaded', 'Document Downloaded'), ('shared', 'Document Shared'), ('modified', 'Metadata Modified'), ('version_created', 'New Version Created'), ('permission_granted', 'Permission Granted'), ('permission_revoked', 'Permission Revoked'), ('archived', 'Document Archived'), ('deleted', 'Document Deleted'), ('restored', 'Document Restored'), ('retention_extended', 'Retention Period Extended'), ('disposal_scheduled', 'Disposal Scheduled')], max_length=30)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('details', models.JSONField(default=dict)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('compliance_relevant', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('client_involved', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.client')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='core.document')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['document', '-timestamp'], name='core_docume_documen_0b1d94_idx'), models.Index(fields=['user', '-timestamp'], name='core_docume_user_id_61e1ab_idx'), models.Index(fields=['action', '-timestamp'], name='core_docume_action_a33c2d_idx'), models.Index(fields=['compliance_relevant', '-timestamp'], name='core_docume_complia_468009_idx'), models.Index(fields=['timestamp'], name='core_docume_timesta_deebd6_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='documentcategory',
            index=models.Index(fields=['advisor', 'category_type'], name='core_docume_advisor_79d737_idx'),
        ),
        migrations.AddIndex(
            model_name='documentcategory',
            index=models.Index(fields=['is_active'], name='core_docume_is_acti_acb662_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentcategory',
            unique_together={('advisor', 'name')},
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['advisor', '-uploaded_at'], name='core_docume_advisor_8ac0f7_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['client', '-uploaded_at'], name='core_docume_client__3c84c0_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['status', 'retention_status'], name='core_docume_status_3d4abf_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['file_hash'], name='core_docume_file_ha_9fc97d_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['retention_end_date'], name='core_docume_retenti_cd8c49_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['category', '-uploaded_at'], name='core_docume_categor_99f160_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['compliance_type'], name='core_docume_complia_cb8908_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['contains_pii', 'contains_phi'], name='core_docume_contain_22f999_idx'),
        ),
        migrations.AddIndex(
            model_name='documentpermission',
            index=models.Index(fields=['user', 'is_active'], name='core_docume_user_id_2c6e02_idx'),
        ),
        migrations.AddIndex(
            model_name='documentpermission',
            index=models.Index(fields=['share_token'], name='core_docume_share_t_d7aa0e_idx'),
        ),
        migrations.AddIndex(
            model_name='documentpermission',
            index=models.Index(fields=['expires_at'], name='core_docume_expires_2a2747_idx'),
        ),
        migrations.AddIndex(
            model_name='documentpermission',
            index=models.Index(fields=['document', 'permission_type'], name='core_docume_documen_83efc2_idx'),
        ),
        migrations.AddIndex(
            model_name='documentretentionpolicy',
            index=models.Index(fields=['advisor', 'is_active'], name='core_docume_advisor_965498_idx'),
        ),
        migrations.AddIndex(
            model_name='documentretentionpolicy',
            index=models.Index(fields=['category'], name='core_docume_categor_50699f_idx'),
        ),
        migrations.AddIndex(
            model_name='documentretentionpolicy',
            index=models.Index(fields=['auto_disposal_enabled'], name='core_docume_auto_di_5ecea5_idx'),
        ),
        migrations.AddIndex(
            model_name='documenttemplate',
            index=models.Index(fields=['advisor', 'template_type'], name='core_docume_advisor_ec2ee8_idx'),
        ),
        migrations.AddIndex(
            model_name='documenttemplate',
            index=models.Index(fields=['is_active'], name='core_docume_is_acti_443df5_idx'),
        ),
        migrations.AddIndex(
            model_name='documenttemplate',
            index=models.Index(fields=['-times_used'], name='core_docume_times_u_85fb87_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documenttemplate',
            unique_together={('advisor', 'name')},
        ),
        migrations.AddIndex(
            model_name='documentversion',
            index=models.Index(fields=['document', '-version_number'], name='core_docume_documen_4a5508_idx'),
        ),
        migrations.AddIndex(
            model_name='documentversion',
            index=models.Index(fields=['created_at'], name='core_docume_created_16d739_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentversion',
            unique_together={('document', 'version_number')},
        ),
    ]
