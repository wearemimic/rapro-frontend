# Generated by Django 5.2.5 on 2025-08-26 22:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0021_scenario_custom_annual_deduction_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('gmail', 'Gmail'), ('outlook', 'Outlook/Office365'), ('imap', 'IMAP/SMTP')], max_length=20)),
                ('email_address', models.EmailField(max_length=254)),
                ('display_name', models.CharField(blank=True, max_length=100)),
                ('access_token', models.TextField(blank=True)),
                ('refresh_token', models.TextField(blank=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('imap_server', models.CharField(blank=True, max_length=100)),
                ('imap_port', models.IntegerField(blank=True, null=True)),
                ('smtp_server', models.CharField(blank=True, max_length=100)),
                ('smtp_port', models.IntegerField(blank=True, null=True)),
                ('use_ssl', models.BooleanField(default=True)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('sync_folders', models.JSONField(default=list, help_text='Folders/labels to sync')),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_history_id', models.CharField(blank=True, help_text='For Gmail History API', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_accounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('new', 'New Lead'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('converted', 'Converted to Client'), ('lost', 'Lost')], default='new', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversion_date', models.DateTimeField(blank=True, null=True)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to=settings.AUTH_USER_MODEL)),
                ('converted_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.client')),
            ],
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('call', 'Phone Call'), ('meeting', 'Meeting'), ('note', 'Note')], max_length=20)),
                ('direction', models.CharField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound'), ('internal', 'Internal Note')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=500)),
                ('content', models.TextField()),
                ('provider_message_id', models.CharField(blank=True, help_text='Gmail/Outlook message ID', max_length=255)),
                ('message_id_header', models.CharField(blank=True, help_text='RFC822 Message-ID header', max_length=255)),
                ('thread_id', models.CharField(blank=True, max_length=255)),
                ('in_reply_to', models.CharField(blank=True, max_length=255)),
                ('from_address', models.EmailField(blank=True, max_length=254)),
                ('to_addresses', models.JSONField(default=list)),
                ('cc_addresses', models.JSONField(default=list)),
                ('bcc_addresses', models.JSONField(default=list)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('synced', 'Synced'), ('pending', 'Pending'), ('error', 'Error')], default='synced', max_length=20)),
                ('sync_direction', models.CharField(blank=True, choices=[('from_email', 'From Email'), ('from_crm', 'From CRM')], max_length=20)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='core.client')),
                ('email_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.emailaccount')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='core.lead')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('email_received', 'Email Received'), ('email_sent', 'Email Sent'), ('sms_received', 'SMS Received'), ('sms_sent', 'SMS Sent'), ('call_logged', 'Phone Call'), ('meeting_scheduled', 'Meeting Scheduled'), ('task_created', 'Task Created'), ('task_completed', 'Task Completed'), ('document_uploaded', 'Document Uploaded'), ('note_added', 'Note Added'), ('lead_converted', 'Lead Converted to Client'), ('scenario_created', 'Scenario Created'), ('report_generated', 'Report Generated')], max_length=30)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(default=dict, help_text='Activity-specific data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.lead')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('source_type', models.CharField(choices=[('facebook', 'Facebook Ad'), ('google', 'Google Ad'), ('email', 'Email Campaign'), ('referral', 'Referral'), ('website', 'Website'), ('social', 'Social Media'), ('direct', 'Direct')], max_length=20)),
                ('utm_source', models.CharField(blank=True, max_length=100)),
                ('utm_medium', models.CharField(blank=True, max_length=100)),
                ('utm_campaign', models.CharField(blank=True, max_length=100)),
                ('utm_term', models.CharField(blank=True, max_length=100)),
                ('utm_content', models.CharField(blank=True, max_length=100)),
                ('facebook_campaign_id', models.CharField(blank=True, max_length=100)),
                ('google_campaign_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['source_type'], name='core_leadso_source__a86c17_idx'), models.Index(fields=['utm_campaign'], name='core_leadso_utm_cam_dbde5d_idx'), models.Index(fields=['created_at'], name='core_leadso_created_b082cc_idx')],
            },
        ),
        migrations.AddField(
            model_name='lead',
            name='lead_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.leadsource'),
        ),
        migrations.CreateModel(
            name='SMSMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twilio_sid', models.CharField(max_length=100, unique=True)),
                ('direction', models.CharField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], max_length=20)),
                ('from_number', models.CharField(max_length=20)),
                ('to_number', models.CharField(max_length=20)),
                ('body', models.TextField()),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sms_messages', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sms_messages', to='core.client')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sms_messages', to='core.lead')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TwilioConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_sid', models.CharField(max_length=100)),
                ('auth_token', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('webhook_url', models.URLField()),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='twilio_config', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='emailaccount',
            index=models.Index(fields=['user', 'is_active'], name='core_emaila_user_id_0093a9_idx'),
        ),
        migrations.AddIndex(
            model_name='emailaccount',
            index=models.Index(fields=['provider'], name='core_emaila_provide_e2a27d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='emailaccount',
            unique_together={('user', 'email_address')},
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['advisor', 'created_at'], name='core_commun_advisor_5d4c68_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['client', 'created_at'], name='core_commun_client__9204cd_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['lead', 'created_at'], name='core_commun_lead_id_1b1f8c_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['communication_type', 'created_at'], name='core_commun_communi_0e8d3e_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['provider_message_id'], name='core_commun_provide_da71b8_idx'),
        ),
        migrations.AddIndex(
            model_name='communication',
            index=models.Index(fields=['thread_id'], name='core_commun_thread__1193b6_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['-created_at', 'user'], name='core_activi_created_1503ae_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['client', '-created_at'], name='core_activi_client__d14b93_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['activity_type', '-created_at'], name='core_activi_activit_84f18c_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['advisor', 'status'], name='core_lead_advisor_6dbeab_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['created_at'], name='core_lead_created_054771_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['email'], name='core_lead_email_40e23f_idx'),
        ),
        migrations.AddIndex(
            model_name='smsmessage',
            index=models.Index(fields=['advisor', 'created_at'], name='core_smsmes_advisor_79d39f_idx'),
        ),
        migrations.AddIndex(
            model_name='smsmessage',
            index=models.Index(fields=['client', 'created_at'], name='core_smsmes_client__ac0b7f_idx'),
        ),
        migrations.AddIndex(
            model_name='smsmessage',
            index=models.Index(fields=['lead', 'created_at'], name='core_smsmes_lead_id_dc24f7_idx'),
        ),
        migrations.AddIndex(
            model_name='smsmessage',
            index=models.Index(fields=['from_number', 'to_number'], name='core_smsmes_from_nu_d135ef_idx'),
        ),
    ]
