# Generated by Django 5.2.5 on 2025-08-26 23:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0023_communication_ai_analysis_date_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('waiting', 'Waiting for Response'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_duration_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('actual_duration_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('tags', models.JSONField(default=list, help_text='Task tags for organization')),
                ('attachments', models.JSONField(default=list, help_text='File attachments metadata')),
                ('notes', models.TextField(blank=True, help_text='Progress notes and updates')),
                ('reminder_sent', models.BooleanField(default=False)),
                ('overdue_notification_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('scenario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.scenario')),
            ],
            options={
                'ordering': ['-priority', 'due_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=True, help_text='Internal comments not visible to clients')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentions', models.ManyToManyField(blank=True, related_name='task_mentions', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('default_title', models.CharField(max_length=255)),
                ('default_priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('estimated_duration_hours', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated hours to complete', max_digits=5, null=True)),
                ('trigger_type', models.CharField(choices=[('manual', 'Manual Creation'), ('client_created', 'Client Created'), ('scenario_completed', 'Scenario Completed'), ('meeting_scheduled', 'Meeting Scheduled'), ('communication_received', 'Communication Received'), ('deadline_approaching', 'Deadline Approaching'), ('periodic', 'Periodic (Recurring)')], default='manual', max_length=50)),
                ('trigger_conditions', models.JSONField(default=dict, help_text='Conditions for automatic task creation')),
                ('auto_assign_to_creator', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auto_assign_to_users', models.ManyToManyField(blank=True, related_name='auto_assigned_task_templates', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_task_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='task',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='core.tasktemplate'),
        ),
        migrations.AddIndex(
            model_name='tasktemplate',
            index=models.Index(fields=['trigger_type', 'is_active'], name='core_taskte_trigger_841832_idx'),
        ),
        migrations.AddIndex(
            model_name='tasktemplate',
            index=models.Index(fields=['created_by', '-created_at'], name='core_taskte_created_4a89d7_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['assigned_to', 'status', 'due_date'], name='core_task_assigne_20b0f4_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['client', '-created_at'], name='core_task_client__028df5_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status', 'due_date'], name='core_task_status_d09cc7_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['priority', 'due_date'], name='core_task_priorit_0e11ad_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['-created_at'], name='core_task_created_0bd9f2_idx'),
        ),
    ]
