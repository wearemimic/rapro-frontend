# =============================================================================
# STAGING ENVIRONMENT TEMPLATE FOR REPORT CENTER
# Copy this file to .env for staging environment
# =============================================================================

# =============================================================================
# CORE API CONFIGURATIONS (REQUIRED)
# =============================================================================

# OpenAI API (Use cheaper model for staging)
OPENAI_API_KEY=sk-your-staging-openai-key-here
OPENAI_MODEL_VERSION=gpt-4o-mini  # Cheaper for staging tests

# Auth0 Configuration (Same as production)
AUTH0_DOMAIN=genai-030069804226358743.us.auth0.com
AUTH0_CLIENT_ID=MS2O3usgLl8btDkPNwO6i0ZzC4LxR0Jw
AUTH0_AUDIENCE=https://api.retirementadvisorpro.com
AUTH0_ALGORITHM=RS256
AUTH0_CLIENT_SECRET=your-staging-auth0-client-secret

# Database Configuration
POSTGRES_DB=financial_planner_staging
POSTGRES_USER=staging_admin
POSTGRES_PASSWORD=your-staging-database-password

# Django Configuration
DJANGO_SECRET_KEY=your-staging-django-secret-key
DEBUG=False  # Should be False even in staging

# Stripe Configuration (Use test keys)
STRIPE_PUBLISHABLE_KEY=pk_test_your_staging_publishable_key
STRIPE_SECRET_KEY=sk_test_your_staging_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_staging_webhook_secret

# =============================================================================
# REPORT CENTER STAGING CONFIGURATIONS
# =============================================================================

# Background Task Processing (Redis)
CELERY_BROKER_URL=redis://staging-redis:6379/0
CELERY_RESULT_BACKEND=redis://staging-redis:6379/0

# Reduced limits for staging
AI_COST_LIMIT_PER_USER_MONTHLY=25.00  # Lower cost limit
REPORT_GENERATION_TIMEOUT=120  # Faster timeout for testing
BULK_EXPORT_BATCH_SIZE=25  # Smaller batches
TEMPLATE_CACHE_TIMEOUT=1800  # 30 minutes
REPORT_FILE_RETENTION_DAYS=30  # Shorter retention

# File Upload Configuration
MAX_UPLOAD_SIZE=26214400  # 25MB for staging

# Feature Flags (All enabled for testing)
ENABLE_AI_FEATURES=True
ENABLE_BULK_EXPORTS=True
ENABLE_REPORT_SCHEDULING=True
ENABLE_CLIENT_PORTAL=True

# Analytics Configuration
ANALYTICS_RETENTION_MONTHS=6

# =============================================================================
# EMAIL CONFIGURATION (Console backend for staging)
# =============================================================================

EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend  # Prints to console
DEFAULT_FROM_EMAIL=staging@retirementadvisorpro.com
SERVER_EMAIL=staging-admin@retirementadvisorpro.com

# =============================================================================
# STAGING SPECIFIC SETTINGS
# =============================================================================

# CDN Configuration (staging CDN)
CDN_URL=https://staging-cdn.retirementadvisorpro.com

# Logging Configuration
LOG_LEVEL=DEBUG  # More verbose logging for staging
SENTRY_DSN=https://your-staging-sentry-dsn-here

# Allow staging domain
ALLOWED_HOSTS=staging.retirementadvisorpro.com,localhost,127.0.0.1

# =============================================================================
# STAGING TESTING NOTES
# =============================================================================
# Use this environment to test:
# ✓ AI content generation with cheaper model
# ✓ Report generation and export functionality  
# ✓ Background task processing
# ✓ Email notifications (console output)
# ✓ File upload and storage
# ✓ Client portal sharing
# ✓ Bulk export operations
# ✓ Report scheduling
# =============================================================================