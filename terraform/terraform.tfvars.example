# Example Terraform variables file for RetirementAdvisorPro
# Copy this file to terraform.tfvars and customize the values

# Basic Configuration
aws_region     = "us-east-1"
environment    = "prod"
project_name   = "retirementadvisorpro"
domain_name    = ""  # Set your custom domain, e.g., "app.example.com"

# GitHub Configuration for CI/CD
github_owner  = ""  # Your GitHub username or organization
github_repo   = "retirementadvisorpro"
github_branch = "main"
github_token_secret_name = "github-token"  # Name of secret in AWS Secrets Manager

# Network Configuration
vpc_cidr = "10.0.0.0/16"

# ECS Configuration - Cost Optimized for Startup
frontend_cpu    = 256   # 0.25 vCPU
frontend_memory = 512   # 512 MB
backend_cpu     = 512   # 0.5 vCPU
backend_memory  = 1024  # 1 GB

celery_worker_cpu    = 512   # 0.5 vCPU
celery_worker_memory = 1024  # 1 GB
celery_beat_cpu      = 256   # 0.25 vCPU
celery_beat_memory   = 512   # 512 MB

# Auto Scaling Configuration
frontend_min_capacity = 1
frontend_max_capacity = 5
backend_min_capacity  = 1
backend_max_capacity  = 5

celery_worker_min_capacity = 1
celery_worker_max_capacity = 3

# Database Configuration - Cost Optimized
db_instance_class        = "db.t3.micro"  # Free tier eligible for 12 months
db_allocated_storage     = 20
db_max_allocated_storage = 100
db_backup_retention_period = 7
db_multi_az             = false  # Set to true for production high availability

# Redis Configuration - Cost Optimized
redis_node_type        = "cache.t3.micro"  # Smallest instance
redis_num_cache_nodes  = 1
redis_parameter_group_name = "default.redis7"

# Cost Optimization Settings
enable_fargate_spot = true   # Save ~50-70% on compute costs
enable_nat_gateway  = true   # Required for private subnet internet access
single_nat_gateway  = true   # Use single NAT Gateway to save costs ($32/month vs $64/month)

# CDN and Security
enable_cloudfront = true   # Recommended for production
enable_waf        = false  # Additional cost, enable for high-security needs
certificate_arn   = ""     # SSL certificate ARN from AWS Certificate Manager

# Monitoring and Logging
log_retention_in_days     = 14    # Shorter retention to save costs
enable_detailed_monitoring = false  # Additional cost
notification_email        = ""    # Email for CloudWatch alerts

# Auth0 Configuration (Public values, secrets go in Parameter Store)
auth0_domain    = ""  # e.g., "your-tenant.us.auth0.com"
auth0_client_id = ""  # Public client ID
auth0_audience  = ""  # API audience identifier

# Stripe Configuration (Public key, secret goes in Parameter Store)
stripe_public_key = ""  # Stripe publishable key

# Example Production Configuration (uncomment and modify as needed):
# 
# # Production Environment
# environment = "prod"
# domain_name = "app.retirementadvisorpro.com"
# 
# # Production Resource Sizing
# frontend_cpu    = 512
# frontend_memory = 1024
# backend_cpu     = 1024
# backend_memory  = 2048
# 
# # Production Database
# db_instance_class = "db.t3.small"
# db_multi_az      = true
# 
# # Production Redis
# redis_node_type = "cache.t3.small"
# 
# # Production Security
# enable_waf = true
# enable_detailed_monitoring = true
# 
# # Production Scaling
# frontend_max_capacity = 10
# backend_max_capacity  = 10
# celery_worker_max_capacity = 5

# Example Development/Staging Configuration:
#
# environment = "staging"
# 
# # Minimal resources for development
# frontend_cpu    = 256
# frontend_memory = 512
# backend_cpu     = 256
# backend_memory  = 512
# 
# # Development database
# db_instance_class = "db.t3.micro"
# db_backup_retention_period = 1
# 
# # Development settings
# log_retention_in_days = 3
# enable_cloudfront = false
# enable_fargate_spot = true