# CodeBuild buildspec for RetirementAdvisorPro frontend
# Builds Vue.js application and deploys to S3 + ECR

version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Pre-build started on `date`
      - echo Installing dependencies...
      - cd frontend
      - npm ci --only=production

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Vue.js application...
      
      # Build production assets
      - npm run build
      
      # Copy build artifacts to S3 for static hosting
      - echo Uploading static assets to S3...
      - aws s3 sync dist/ s3://$STATIC_BUCKET --delete --cache-control "public, max-age=31536000"
      - aws s3 cp s3://$STATIC_BUCKET/index.html s3://$STATIC_BUCKET/index.html --cache-control "public, max-age=0, must-revalidate" --metadata-directive REPLACE
      
      # Build Docker image for container deployment
      - echo Building Docker image for frontend...
      - cd ..
      - docker build -f docker/Dockerfile.frontend -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      
      # Invalidate CloudFront cache if distribution exists
      - |
        if [ ! -z "$CLOUDFRONT_DISTRIBUTION_ID" ]; then
          echo Invalidating CloudFront cache...
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
        fi
      
      # Create imagedefinitions.json for ECS deployment
      - printf '[{"name":"frontend","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
  name: frontend-build-$(date +%Y-%m-%d)