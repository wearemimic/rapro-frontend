# =============================================================================
# PRODUCTION ENVIRONMENT TEMPLATE FOR REPORT CENTER
# Copy this file to .env and fill in your actual values
# =============================================================================

# =============================================================================
# CORE API CONFIGURATIONS (REQUIRED)
# =============================================================================

# OpenAI API (REQUIRED for Report Center AI features)
OPENAI_API_KEY=sk-your-production-openai-key-here
OPENAI_MODEL_VERSION=gpt-4-turbo-preview

# Auth0 Configuration (Already configured)
AUTH0_DOMAIN=genai-030069804226358743.us.auth0.com
AUTH0_CLIENT_ID=MS2O3usgLl8btDkPNwO6i0ZzC4LxR0Jw
AUTH0_AUDIENCE=https://api.retirementadvisorpro.com
AUTH0_ALGORITHM=RS256
AUTH0_CLIENT_SECRET=your-production-auth0-client-secret

# Database Configuration (Already configured)
POSTGRES_DB=financial_planner
POSTGRES_USER=admin
POSTGRES_PASSWORD=your-production-database-password

# Django Configuration (Already configured)
DJANGO_SECRET_KEY=your-production-django-secret-key

# Stripe Configuration (Already configured)
STRIPE_PUBLISHABLE_KEY=pk_live_your_production_publishable_key
STRIPE_SECRET_KEY=sk_live_your_production_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_production_webhook_secret

# =============================================================================
# REPORT CENTER SPECIFIC CONFIGURATIONS (REQUIRED)
# =============================================================================

# Background Task Processing (CRITICAL - Redis required)
CELERY_BROKER_URL=redis://your-production-redis-host:6379/0
CELERY_RESULT_BACKEND=redis://your-production-redis-host:6379/0

# AI Cost Management
AI_COST_LIMIT_PER_USER_MONTHLY=100.00

# Report Generation Settings
REPORT_GENERATION_TIMEOUT=300
BULK_EXPORT_BATCH_SIZE=100
TEMPLATE_CACHE_TIMEOUT=3600
REPORT_FILE_RETENTION_DAYS=90

# File Upload Configuration
MAX_UPLOAD_SIZE=52428800  # 50MB

# Feature Flags (Enable for production)
ENABLE_AI_FEATURES=True
ENABLE_BULK_EXPORTS=True
ENABLE_REPORT_SCHEDULING=True
ENABLE_CLIENT_PORTAL=True

# Analytics Configuration
ANALYTICS_RETENTION_MONTHS=12

# =============================================================================
# EMAIL CONFIGURATION (REQUIRED for report sharing)
# =============================================================================

EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.sendgrid.net  # or your preferred SMTP provider
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=apikey  # for SendGrid
EMAIL_HOST_PASSWORD=your-sendgrid-api-key

# Default email settings
DEFAULT_FROM_EMAIL=noreply@retirementadvisorpro.com
SERVER_EMAIL=admin@retirementadvisorpro.com

# =============================================================================
# OPTIONAL PRODUCTION ENHANCEMENTS
# =============================================================================

# CDN Configuration (Recommended for file delivery)
CDN_URL=https://cdn.retirementadvisorpro.com

# Security Settings (Recommended for HTTPS)
SECURE_SSL_REDIRECT=True
SECURE_PROXY_SSL_HEADER=('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_BROWSER_XSS_FILTER=True

# Session Security
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

# Logging Configuration
LOG_LEVEL=INFO
SENTRY_DSN=https://your-sentry-dsn-here  # Optional error tracking

# =============================================================================
# SYSTEM REQUIREMENTS CHECKLIST
# =============================================================================
# Before deploying, ensure you have:
# ✓ Redis server running and accessible
# ✓ OpenAI API key with sufficient credits
# ✓ SMTP email service configured
# ✓ PostgreSQL database with proper permissions
# ✓ Celery worker processes configured
# ✓ File storage permissions set correctly
# ✓ SSL certificates installed (for HTTPS)
# ✓ Firewall rules allowing Redis connections
# =============================================================================

# =============================================================================
# DEVELOPMENT/STAGING OVERRIDES
# =============================================================================
# For development: Use gpt-4o-mini and lower cost limits
# For staging: Use console email backend and reduced timeouts
# OPENAI_MODEL_VERSION=gpt-4o-mini  # Cheaper for dev/staging
# AI_COST_LIMIT_PER_USER_MONTHLY=25.00  # Lower for staging
# EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend  # Staging only
# =============================================================================