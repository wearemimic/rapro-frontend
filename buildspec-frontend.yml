version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Pre-build started on `date`
      - echo Setting up Docker buildx for multi-platform builds...
      - docker buildx create --use --name multiarch --driver docker-container || true
      - docker buildx inspect --bootstrap
  build:
    commands:
      - echo Build started on `date`
      - echo Building Vue.js Docker images for staging and production...
      
      # Debug environment variables
      - echo "=== Environment Variables ==="
      - echo "VITE_AUTH0_DOMAIN=$VITE_AUTH0_DOMAIN"
      - echo "VITE_AUTH0_CLIENT_ID=$VITE_AUTH0_CLIENT_ID"
      - echo "VITE_AUTH0_AUDIENCE=$VITE_AUTH0_AUDIENCE"
      - echo "VITE_STRIPE_PUBLIC_KEY=$VITE_STRIPE_PUBLIC_KEY"
      - echo "=========================="
      
      # Build staging image
      - echo "Building staging image..."
      - docker buildx build --platform linux/amd64 -f docker/Dockerfile.frontend.prod -t $IMAGE_REPO_NAME:staging \
          --build-arg VITE_API_BASE_URL=https://staging.retirementadvisorpro.com \
          --build-arg VITE_API_URL=https://staging.retirementadvisorpro.com/api \
          --build-arg VITE_FRONTEND_URL=https://staging.retirementadvisorpro.com \
          --build-arg VITE_AUTH0_DOMAIN=$VITE_AUTH0_DOMAIN \
          --build-arg VITE_AUTH0_CLIENT_ID=$VITE_AUTH0_CLIENT_ID \
          --build-arg VITE_AUTH0_AUDIENCE=$VITE_AUTH0_AUDIENCE \
          --build-arg VITE_STRIPE_PUBLIC_KEY=$VITE_STRIPE_PUBLIC_KEY \
          --load .
      - docker tag $IMAGE_REPO_NAME:staging $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:staging
      
      # Build production image
      - echo "Building production image..."
      - docker buildx build --platform linux/amd64 -f docker/Dockerfile.frontend.prod -t $IMAGE_REPO_NAME:latest \
          --build-arg VITE_API_BASE_URL=https://app.retirementadvisorpro.com \
          --build-arg VITE_API_URL=https://app.retirementadvisorpro.com/api \
          --build-arg VITE_FRONTEND_URL=https://app.retirementadvisorpro.com \
          --build-arg VITE_AUTH0_DOMAIN=$VITE_AUTH0_DOMAIN \
          --build-arg VITE_AUTH0_CLIENT_ID=$VITE_AUTH0_CLIENT_ID \
          --build-arg VITE_AUTH0_AUDIENCE=$VITE_AUTH0_AUDIENCE \
          --build-arg VITE_STRIPE_PUBLIC_KEY=$VITE_STRIPE_PUBLIC_KEY \
          --load .
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker images to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:staging
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      # Use staging image for staging deployment
      - printf '[{"name":"frontend","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:staging > imagedefinitions-staging.json
      # Use latest image for production deployment
      - printf '[{"name":"frontend","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest > imagedefinitions.json
      - cat imagedefinitions.json
      - cat imagedefinitions-staging.json

artifacts:
  files:
    - imagedefinitions.json
    - imagedefinitions-staging.json
  name: frontend-build-$(date +%Y-%m-%d)